version: '3.2'

services:

  vault:
    image: vault:latest
    container_name: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: supersecret
    cap_add:
      - IPC_LOCK
    expose:
      - 8200

  supersecret:
    build: ./
    image: algolia/supersecretmessage:latest
    container_name: supersecret
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: supersecret
      LETSENCRYPT_HOST: "${LETSENCRYPT_HOST}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
      VIRTUAL_HOST: "${VIRTUAL_HOST}"
      VIRTUAL_PROTO: "http"
      VIRTUAL_PORT: 1234
      CERT_NAME: "${CERT_NAME}"
    expose:
      - 1234

  nginx:
    image: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${NGINX_CONF_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_CONF_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${STATIC_FILES_PATH}:/usr/share/nginx/html
      - ${NGINX_CONF_PATH}/certs:/etc/nginx/certs:ro

  nginx-gen:
    image: jwilder/docker-gen
    command: >-
      -notify-sighup nginx
      -watch
      -wait 5s:30s
      /etc/docker-gen/templates/nginx.tmpl
      /etc/nginx/conf.d/default.conf
    container_name: nginx-gen
    restart: unless-stopped
    volumes:
      - ${NGINX_CONF_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_CONF_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${STATIC_FILES_PATH}:/usr/share/nginx/html
      - ${NGINX_CONF_PATH}/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: unless-stopped
    volumes:
      - ${NGINX_CONF_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_CONF_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${STATIC_FILES_PATH}:/usr/share/nginx/html
      - ${NGINX_CONF_PATH}/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: "nginx-gen"
      NGINX_PROXY_CONTAINER: "nginx"
